/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("window.onload = () => {\n  const opts = document.querySelectorAll(\"select\");\n  for (let i = 0; i < opts.length; i++) {\n    opts[i].addEventListener(\"change\", () => {\n      initMap();\n    });\n  }\n  const details = {\n    \"Time Square\": {\n      lat: 40.758896,\n      lng: -73.98513,\n      type: \"Tourist\",\n      price: \"$\",\n      party: \"Solo Advanture\"\n    },\n    \"The High Line\": {\n      lat: 40.747993,\n      lng: -74.00489,\n      type: \"Tourist\",\n      price: \"$\",\n      party: \"Solo Advanture\",\n      seasonal: \"no\"\n    },\n    \"Hudson River Park\": {\n      lat: 40.729563,\n      lng: -74.012699,\n      type: \"Cultural\",\n      price: \"$\",\n      party: \"Solo Advanture\"\n    },\n    \"Empire State Building\": {\n      lat: 40.748817,\n      lng: -73.985428,\n      type: \"Tourist\",\n      price: \"$$\",\n      party: \"Solo Advanture\"\n    },\n    \"Koreatown\": {\n      lat: 40.748817,\n      lng: -73.9755,\n      type: \"Food/Drink\",\n      price: \"$$\",\n      party: \"Travel With Friends\"\n    },\n    \"Chinatown\": {\n      lat: 40.7177,\n      lng: -74.0015,\n      type: \"Food/Drink\",\n      price: \"$\",\n      party: \"Solo Advanture\"\n    },\n    \"Central Park\": {\n      lat: 40.785091,\n      lng: -73.968285,\n      type: \"Cultural\",\n      price: \"$\",\n      party: \"Solo Advanture\"\n    },\n    \"The Vessel\": {\n      lat: 40.753826,\n      lng: -74.002228,\n      type: \"Tourist\",\n      price: \"$$\",\n      party: \"Solo Advanture\"\n    },\n    \"Metropolitan Museum of Art\": {\n      lat: 40.779434,\n      lng: -73.963402,\n      type: \"Cultural\",\n      price: \"$\",\n      party: \"Solo Advanture\"\n    },\n    \"Museum of Modern Art\": {\n      lat: 40.761509,\n      lng: -73.978271,\n      type: \"Cultural\",\n      price: \"$\",\n      party: \"Solo Advanture\"\n    },\n    \"Chelsea Market\": {\n      lat: 40.742352,\n      lng: -74.00621,\n      type: \"Food/Drink\",\n      price: \"$$\",\n      party: \"Solo Advanture\"\n    },\n    \"St Marks Place\": {\n      lat: 40.7285,\n      lng: -73.9882,\n      type: \"Food/Drink\",\n      price: \"$$\",\n      party: \"Travel With Friends\"\n    },\n    \"Madison Square Garden\": {\n      lat: 40.750298,\n      lng: -73.993324,\n      type: \"Tourist\",\n      price: \"$$$\",\n      party: \"Travel With Friends\"\n    },\n    \"Rockefeller Center\": {\n      lat: 40.758678,\n      lng: -73.978798,\n      type: \"Tourist\",\n      price: \"$$\",\n      party: \"Solo Advanture\"\n    },\n    \"Little Italy\": {\n      lat: 40.719141,\n      lng: -73.997327,\n      type: \"Food/Drink\",\n      price: \"$$\",\n      party: \"Solo Advanture\"\n    },\n    \"Little Island\": {\n      lat: 40.7421,\n      lng: -74.01,\n      type: \"Tourist\",\n      price: \"$\",\n      party: \"Solo Advanture\"\n    },\n    \"SOHO\": {\n      lat: 40.7246,\n      lng: -74.0019,\n      type: \"Tourist\",\n      price: \"$$\",\n      party: \"Solo Advanture\"\n    }\n  };\n  function partyFilter(obj, arr, value) {\n    if (value === \"Default Party\") {\n      return arr;\n    }\n    let filtered_array = [];\n    for (let i = 0; i < arr.length; i++) {\n      if (obj[arr[i]][\"party\"] === value) {\n        filtered_array.push(arr[i]);\n      }\n    }\n    return filtered_array;\n  }\n  function priceFilter(obj, arr, value) {\n    if (value === \"Default Price\") {\n      return arr;\n    }\n    let filtered_array = [];\n    for (let i = 0; i < arr.length; i++) {\n      if (obj[arr[i]][\"price\"] === value) {\n        filtered_array.push(arr[i]);\n      }\n    }\n    return filtered_array;\n  }\n  function typeFilter(obj, arr, value) {\n    if (value === \"Default Type\") {\n      return arr;\n    }\n    let filtered_array = [];\n    for (let i = 0; i < arr.length; i++) {\n      if (obj[arr[i]][\"type\"] === value) {\n        filtered_array.push(arr[i]);\n      }\n    }\n    return filtered_array;\n  }\n  function initMap() {\n    // Map initialization\n    window.map = new google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 12,\n      center: new google.maps.LatLng(40.776676, -73.971321),\n      mapTypeId: google.maps.MapTypeId.HYBRID\n    });\n    const party = document.getElementById(\"party\");\n    const party_size = party.options[party.selectedIndex].value;\n    const type = document.getElementById(\"type\");\n    const type_size = type.options[type.selectedIndex].value;\n    const price = document.getElementById(\"price\");\n    const price_size = price.options[price.selectedIndex].value;\n    const touristtype = Object.keys(details);\n    let filtered1 = typeFilter(details, touristtype, type_size);\n    let filtered2 = priceFilter(details, filtered1, price_size);\n    let filtered3 = partyFilter(details, filtered2, party_size);\n    displayMarkers(filtered3);\n\n    // Dropdown update code\n    const locationSelect = document.getElementById(\"location-select\");\n    locationSelect.addEventListener(\"change\", () => {\n      updateMarkersBasedOnSelectedLocation();\n    });\n    const selectedLocation = locationSelect.value;\n    const locationDetails = details[selectedLocation];\n    const isLocationSelectEvent = locationSelect === document.activeElement;\n    function updateMarkersBasedOnSelectedLocation() {\n      const locationSelect = document.getElementById(\"location-select\");\n      const selectedLocation = locationSelect.value;\n      if (selectedLocation === \"all\") {\n        // Show all markers if the selected option is \"----\"\n        const party = document.getElementById(\"party\");\n        const party_size = party.options[party.selectedIndex].value;\n        const type = document.getElementById(\"type\");\n        const type_size = type.options[type.selectedIndex].value;\n        const price = document.getElementById(\"price\");\n        const price_size = price.options[price.selectedIndex].value;\n        const touristtype = Object.keys(details);\n        let filtered1 = typeFilter(details, touristtype, type_size);\n        let filtered2 = priceFilter(details, filtered1, price_size);\n        let filtered3 = partyFilter(details, filtered2, party_size);\n        displayMarkers(filtered3);\n      } else {\n        // Show only the marker of the selected location\n        displayMarkers([selectedLocation]);\n      }\n    }\n    if (!isLocationSelectEvent) {\n      // Clear the locationSelect dropdown\n      locationSelect.innerHTML = '';\n\n      // Add an 'All Locations' option\n      const allOption = document.createElement(\"option\");\n      allOption.value = \"all\";\n      allOption.text = \"----\";\n      locationSelect.add(allOption);\n\n      // Add the filtered locations\n      filtered3.forEach(loc => {\n        const option = document.createElement(\"option\");\n        option.value = loc;\n        option.text = loc;\n        locationSelect.add(option);\n      });\n    } else {\n      // Set the selected location in the dropdown\n      locationSelect.value = selectedLocation;\n    }\n    const deez = document.getElementById(\"deez\");\n    deez.innerHTML = `Details: ${locationDetails.lat}, ${locationDetails.lng}, ${locationDetails.type}, ${locationDetails.price}, ${locationDetails.party}`;\n  }\n  function displayMarkers(locations) {\n    // Clear existing markers before adding new ones\n    if (window.markers) {\n      for (let i = 0; i < window.markers.length; i++) {\n        window.markers[i].setMap(null);\n      }\n    }\n    window.markers = [];\n    for (let i = 0; i < locations.length; i++) {\n      const location = details[locations[i]];\n      const marker = new google.maps.Marker({\n        position: new google.maps.LatLng(location.lat, location.lng),\n        map: window.map\n      });\n      window.markers.push(marker);\n      google.maps.event.addListener(marker, \"click\", function (marker, i) {\n        return function () {\n          infowindow.setContent(locations[i]);\n          infowindow.open(window.map, marker);\n        };\n      }(marker, i));\n    }\n  }\n  initMap();\n  // updateMarkersBasedOnSelectedLocation();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ueWMtZ28vLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;